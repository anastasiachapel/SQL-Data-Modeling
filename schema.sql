-- 1. TABLE CREATION


CREATE TABLE TICKET( 
TICKET_ID BIGINT NOT NULL, 
TIMEPLACED TIMESTAMP NOT NULL, 
STORE_ID SMALLINT NOT NULL, 
CASHIER_ID INT NOT NULL, 
TOTAL_NET_PRODUCT DECIMAL(20,5) NOT NULL, 
TOTAL_TAX DECIMAL(20,5) NOT NULL, 
TOTAL_ORDER DECIMAL(20,5) NOT NULL, 
CURRENCY_ID VARCHAR(50) NOT NULL, 
PAYMENT_ID VARCHAR(20) NOT NULL, 
METHOD_CODE VARCHAR(10) NOT NULL, 
CUSTOMER_ID VARCHAR(50),
PRIMARY KEY (TICKET_ID)
);


CREATE TABLE CUSTOMERS(
CUSTOMER_ID VARCHAR(50) NOT NULL, 
FIRST_NAME VARCHAR(40),
LAST_NAME VARCHAR(40),
EMAIL VARCHAR(100),
PHONE_NUMBER VARCHAR(20),
PRIMARY KEY (CUSTOMER_ID));


CREATE TABLE TICKET_ITEM( 
TICKET_ID BIGINT NOT NULL,  
NUMSEQ SMALLINT NOT NULL,   
PRODUCT_ID BIGINT NOT NULL, 
DESCRIPTION VARCHAR(80) NOT NULL, 
QUANTITY SMALLINT NOT NULL, 
CURRENCY VARCHAR(10) NOT NULL,
PRICE DECIMAL(20,5) NOT NULL, 
TAX_AMOUNT DECIMAL(20,5),
PRODUCT_AMOUNT DECIMAL(20,5) NOT NULL,
PRIMARY KEY(TICKET_ID, NUMSEQ)
);


CREATE TABLE STORE(
STORE_ID SMALLINT NOT NULL,  
LOCATION_ID BIGINT NOT NULL, 
PRIMARY KEY(STORE_ID)
);


CREATE TABLE LOCATION(
LOCATION_ID BIGINT NOT NULL, 
TYPE_ID CHAR(1) NOT NULL,
ADDRESS_ID INT NOT NULL, 
PRIMARY KEY(LOCATION_ID)
);


CREATE TABLE LOCATION_TYPE(
TYPE_ID CHAR(1) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL, 
PRIMARY KEY(TYPE_ID)
);


CREATE TABLE ADDRESS(
ADDRESS_ID INT NOT NULL, 
TYPE_ID CHAR(1) NOT NULL, 
NAME VARCHAR(40) NOT NULL, 
NUMBER SMALLINT, 
ZIPCODE INT NOT NULL, 
COUNTRY VARCHAR(20) NOT NULL, 
PRIMARY KEY(ADDRESS_ID)
); 


CREATE TABLE ZIPCODE(
ZIPCODE INT NOT NULL, 
CITY VARCHAR(20) NOT NULL, 
STATE VARCHAR(20) NOT NULL, 
COUNTRY VARCHAR(20) NOT NULL,
PRIMARY KEY(ZIPCODE, COUNTRY)
);


CREATE TABLE ADDRESS_TYPE(
TYPE_ID CHAR(1) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL,
PRIMARY KEY(TYPE_ID)
);


CREATE TABLE PHONES(
LOCATION_ID BIGINT NOT NULL,
NUMSEQ SMALLINT NOT NULL, 
EXTERNAL VARCHAR(20), 
INTERNAL VARCHAR(20), 
DESCRIPTION VARCHAR(40) NOT NULL,
PRIMARY KEY(LOCATION_ID, NUMSEQ)
);


CREATE TABLE CURRENCY(
CURRENCY_ID CHAR(3) NOT NULL, 
CURRENCY_CODE SMALLINT NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL,
PRIMARY KEY (CURRENCY_ID)
);


CREATE TABLE PAYMENT_METHOD(
METHOD_CODE CHAR(2) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL,
PRIMARY KEY (METHOD_CODE)
);


CREATE TABLE PAYMENTS(
PAYMENT_ID VARCHAR(20) NOT NULL, 
TICKET_ID BIGINT NOT NULL,
METHOD_CODE CHAR(2) NOT NULL,
AMOUNT DECIMAL(20,5) NOT NULL,
PAYMENT_DATE TIMESTAMP NOT NULL,
PRIMARY KEY (PAYMENT_ID)
);


CREATE TABLE CC_PAYMENT(
CCPAYMENT_ID BIGINT NOT NULL, 	
CCPAYTRAN_ID BIGINT, 
CURRENCY_ID CHAR(3) NOT NULL, 
EXPECTED_AMOUNT DECIMAL(20,5) NOT NULL, 
APPROVING_AMOUNT DECIMAL(20,5),
APPROVED_AMOUNT DECIMAL(20,5),
CCPAYMENT_STATE CHAR(1) NOT NULL, 
TIME_CREATED TIMESTAMP NOT NULL,
TIMEUPDATED TIMESTAMP,
TIMEEXPIRED TIMESTAMP, 
PAYMENT_ID VARCHAR(20) NOT NULL,
PRIMARY KEY(CCPAYMENT_ID)
); 


CREATE TABLE CCPAYMENT_STATE( 
CCSTATE CHAR(1) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL, 
PRIMARY KEY (CCSTATE)
);


CREATE TABLE CCPAYMENT_CARD(
CCPAYMENT_ID BIGINT NOT NULL,  
PAYMENT_TYPE CHAR(2) NOT NULL, 
IS_ENCRYPT CHAR(1) NOT NULL, 
CARD_NUMBER VARCHAR(64) NOT NULL,
BANKNAME VARCHAR(64) NOT NULL, 
CCEXPDATE CHAR(6) NOT NULL, 
CCENTRY_METHOD VARCHAR(20) NOT NULL, 
PRIMARY KEY (CCPAYMENT_ID)
);


CREATE TABLE CCPAYMENT_TYPE(
CCTYPE CHAR(2) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL, 
PRIMARY KEY (CCTYPE)
); 


CREATE TABLE CCENTRY_METHOD(
CC_METHOD CHAR(1) NOT NULL, 
DESCRIPTION VARCHAR(40) NOT NULL,
PRIMARY KEY(CC_METHOD)
);


CREATE TABLE GIFT_CARDS(
GIFT_CARD_ID BIGINT NOT NULL, 
BALANCE DECIMAL(20,5) NOT NULL,
EXPIRY_DATE DATE,
IS_ACTIVE BOOLEAN NOT NULL,
PAYMENT_ID VARCHAR(40),
PRIMARY KEY (GIFT_CARD_ID)
);


CREATE TABLE PRODUCT( 
PRODUCT_ID BIGINT NOT NULL, 
PRODUCT_NAME VARCHAR(40) NOT NULL, 
CLOTHING_ID BIGINT NOT NULL,
BRAND_ID INT NOT NULL,
SUPPLIER_ID INT NOT NULL, 
PRICE DECIMAL(10,2) NOT NULL,
SIZE_ID CHAR(5) NOT NULL, 
SEASON_ID VARCHAR(10) NOT NULL,
SHORT_DESCRIPTION VARCHAR(130) NOT NULL,
CATEGORY_ID BIGINT, 
PRIMARY KEY(PRODUCT_ID)
);


CREATE TABLE CATEGORY(
CATEGORY_ID BIGINT NOT NULL, 
CATEGORY_NAME VARCHAR(40) NOT NULL,
DESCRIPTION VARCHAR(130), 
CLASS_ID VARCHAR(40) NOT NULL,
PRIMARY KEY (CATEGORY_ID)
);


CREATE TABLE CLASS(
CLASS_ID VARCHAR(40) NOT NULL, 
DESCRIPTION VARCHAR(130), 
FAMILY_ID BIGINT NOT NULL,
PRIMARY KEY (CLASS_ID)
);


CREATE TABLE FAMILY(
FAMILY_ID BIGINT NOT NULL,  
FAMILY_NAME VARCHAR(40) NOT NULL,
DESCRIPTION VARCHAR(130), 
SEGMENT_ID BIGINT NOT NULL,
PRIMARY KEY (FAMILY_ID)
);


CREATE TABLE SEGMENT(
SEGMENT_ID BIGINT NOT NULL, 
SEGMENT_NAME VARCHAR(40) NOT NULL,
DESCRIPTION VARCHAR(130), 
PRIMARY KEY (SEGMENT_ID)
);


CREATE TABLE CLOTHING(
CLOTHING_ID BIGINT NOT NULL, 
SIZE_ID CHAR(5) NOT NULL,
COLOR_ID BIGINT NOT NULL,
SKU VARCHAR(40) NOT NULL, -- "Stock Keeping Unit" 
SEASON_ID VARCHAR(10),
SEGMENT_ID BIGINT NOT NULL,
PRIMARY KEY (CLOTHING_ID)
);


CREATE TABLE SIZE(
SIZE_ID CHAR(5) NOT NULL,  
SIZE_DESCRIPTION VARCHAR(20) NOT NULL,
PRIMARY KEY (SIZE_ID)
);


CREATE TABLE PRICE(
PRODUCT_ID BIGINT NOT NULL,  
COST_CURRENCY CHAR(3) NOT NULL, 
COST DECIMAL(10,2) NOT NULL, 
PRICE_CURRENCY CHAR(3) NOT NULL, 
PRICE DECIMAL(10,2) NOT NULL,
TAXES SMALLINT NOT NULL, 
PRIMARY KEY(PRODUCT_ID)
);


CREATE TABLE SUPPLIER(
SUPPLIER_ID INT NOT NULL,  
NAME VARCHAR(40) NOT NULL, 
CONTACT_ID INT, 
PAYMENT_TERMS VARCHAR(1050),
PRIMARY KEY (SUPPLIER_ID)
);


CREATE TABLE COLOR(
COLOR_ID BIGINT NOT NULL, 
RGB_RED SMALLINT NOT NULL,
RGB_GREEN SMALLINT NOT NULL, 
RGB_BLUE SMALLINT NOT NULL, 
HEX_CODE CHAR(6) NOT NULL, 
COLOR_NAME VARCHAR(20) NOT NULL,
PRIMARY KEY(COLOR_ID)
);


CREATE TABLE BRANDS(
BRAND_ID INT NOT NULL, 
NAME VARCHAR(40) NOT NULL, 
DESCRIPTION VARCHAR(130), 
SUPPLIER_ID INT NOT NULL,
PRIMARY KEY(BRAND_ID)
);


CREATE TABLE CONTACTS(
CONTACT_ID INT NOT NULL,  
ADDRESS_ID INT NOT NULL, 
PHONENO1 VARCHAR(20) NOT NULL, 
PHONENO2 VARCHAR(20),
EMAIL VARCHAR(50),
PRIMARY KEY(CONTACT_ID)
);


CREATE TABLE EMPLOYEES(
EMPLOYEE_ID INT NOT NULL, 
FIRSTNAME CHAR(20) NOT NULL, 
LASTNAME CHAR(20) NOT NULL, 
POSITION CHAR(20) NOT NULL, 
HIREDATE DATE NOT NULL, 
STORE_ID SMALLINT NOT NULL, 
PRIMARY KEY(EMPLOYEE_ID)
);


CREATE TABLE SEASON(
SEASON_ID VARCHAR(10) NOT NULL, 
SEASON_NAME VARCHAR(40) NOT NULL,
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
PRIMARY KEY (SEASON_ID)
);


-- 2. FOREIGN KEYS


ALTER TABLE TICKET
    ADD FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID),
    ADD FOREIGN KEY (CASHIER_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID),
    ADD FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID),
    ADD FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS(PAYMENT_ID),
    ADD FOREIGN KEY (METHOD_CODE) REFERENCES PAYMENT_METHOD(METHOD_CODE),
    ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID);


ALTER TABLE TICKET_ITEM
    ADD FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID),
    ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);


ALTER TABLE STORE
    ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID);


ALTER TABLE LOCATION
    ADD FOREIGN KEY (TYPE_ID) REFERENCES LOCATION_TYPE(TYPE_ID),
    ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);


ALTER TABLE ADDRESS
    ADD FOREIGN KEY (TYPE_ID) REFERENCES ADDRESS_TYPE(TYPE_ID),
    ADD FOREIGN KEY (ZIPCODE, COUNTRY) REFERENCES ZIPCODE(ZIPCODE, COUNTRY);


ALTER TABLE PHONES
    ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID);


ALTER TABLE PAYMENTS
    ADD FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID),
    ADD FOREIGN KEY (METHOD_CODE) REFERENCES PAYMENT_METHOD(METHOD_CODE);


ALTER TABLE CC_PAYMENT
    ADD FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID),
    ADD FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS(PAYMENT_ID),
    ADD FOREIGN KEY (CCPAYMENT_STATE) REFERENCES CCPAYMENT_STATE(CCSTATE);


ALTER TABLE CCPAYMENT_CARD
    ADD FOREIGN KEY (CCPAYMENT_ID) REFERENCES CC_PAYMENT(CCPAYMENT_ID),
    ADD FOREIGN KEY (PAYMENT_TYPE) REFERENCES CCPAYMENT_TYPE(CCTYPE),
    ADD FOREIGN KEY (CCENTRY_METHOD) REFERENCES CCENTRY_METHOD(CC_METHOD);


ALTER TABLE GIFT_CARDS
    ADD FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS(PAYMENT_ID);


ALTER TABLE PRODUCT
    ADD FOREIGN KEY (CLOTHING_ID) REFERENCES CLOTHING(CLOTHING_ID),
    ADD FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(BRAND_ID),
    ADD FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID),
    ADD FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID),
    ADD FOREIGN KEY (SEASON_ID) REFERENCES SEASON(SEASON_ID);


ALTER TABLE CATEGORY
    ADD FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID);


ALTER TABLE CLASS
    ADD FOREIGN KEY (FAMILY_ID) REFERENCES FAMILY(FAMILY_ID);


ALTER TABLE FAMILY
    ADD FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT(SEGMENT_ID);


ALTER TABLE CLOTHING
    ADD FOREIGN KEY (SIZE_ID) REFERENCES SIZE(SIZE_ID),
    ADD FOREIGN KEY (COLOR_ID) REFERENCES COLOR(COLOR_ID),
    ADD FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT(SEGMENT_ID);


ALTER TABLE PRICE
    ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);


ALTER TABLE SUPPLIER
    ADD FOREIGN KEY (CONTACT_ID) REFERENCES CONTACTS(CONTACT_ID);


ALTER TABLE BRANDS
    ADD FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID);


ALTER TABLE CONTACTS
    ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID);


ALTER TABLE EMPLOYEES
    ADD FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


-- 3. TABLE VALUES


INSERT INTO ADDRESS_TYPE (TYPE_ID, DESCRIPTION) VALUES
('S', 'Street'),
('A', 'Avenue'),
('B', 'Boulevard'),
('L', 'Lane'),
('D', 'Drive'),
('R', 'Road'),
('C', 'Court'),
('Q', 'Square'),
('P', 'Place'),
('T', 'Terrace');


INSERT INTO LOCATION_TYPE (TYPE_ID, DESCRIPTION) VALUES
('C', 'Clothing Store'),
('S', 'Sportswear Store'),
('U', 'Underwear Store'),
('F', 'Footwear Store');


INSERT INTO CCPAYMENT_STATE (CCSTATE, DESCRIPTION) VALUES
(0, 'STATE_NEW'),
(1, 'STATE_APPROVING'),
(2, 'STATE_APPROVED'),
(3, 'STATE_FAILED'),
(4, 'STATE_CANCELED'),
(5, 'STATE_EXPIRED');


INSERT INTO CCPAYMENT_TYPE (CCTYPE, DESCRIPTION) VALUES
('MC', 'MasterCard'),
('VS', 'Visa'),
('DS', 'Discover'),
('AM', 'American Express'),
('DC', 'Diners Club'),
('BK', 'Other Bank Card');


INSERT INTO CCENTRY_METHOD (CC_METHOD, DESCRIPTION) VALUES
(0, 'Card Swiping'),
(1, 'Card Dipping'),
(2, 'Contactless');


INSERT INTO SIZE (SIZE_ID, SIZE_DESCRIPTION) VALUES
('XS', 'Extra Small'),
('S', 'Small'),
('M', 'Medium'),
('L', 'Large'),
('XL', 'Extra Large');


INSERT INTO CURRENCY (CURRENCY_ID, CURRENCY_CODE, DESCRIPTION) VALUES
('USD', 840, 'US Dollar'),
('EUR', 978, 'Euro'),
('GBP', 826, 'British Pound'),
('JPY', 392, 'Japanese Yen'),
('AUD', 036, 'Australian Dollar'),
('CAD', 124, 'Canadian Dollar'),
('INR', 356, 'Indian Rupee'),
('CNY', 156, 'Chinese Yuan'),
('MXN', 484, 'Mexican Peso'),
('BRL', 986, 'Brazilian Real');


INSERT INTO SEGMENT (SEGMENT_ID, SEGMENT_NAME, DESCRIPTION) VALUES
(50000000, 'Food & Beverage & Tobacco', 'This segment includes products related to food, beverages, and tobacco.'),
(60000000, 'Electronics', 'This segment includes products like gadgets, computers, and other electronic devices.'),
(70000000, 'Clothing & Apparel', 'This segment covers clothing, shoes, and accessories for all genders and ages.'),
(80000000, 'Automotive', 'This segment includes cars, automotive parts, and related products.'),
(90000000, 'Health & Beauty', 'This segment covers personal care, cosmetics, and health-related products.'),
(100000000, 'Furniture & Home Décor', 'This segment includes furniture, home décor, and appliances for homes and offices.');


INSERT INTO ZIPCODE (ZIPCODE, CITY, STATE, COUNTRY) VALUES
(28006, 'Madrid', 'Madrid', 'Spain'),
(10022, 'New York', 'New York', 'USA');


INSERT INTO ADDRESS (ADDRESS_ID, TYPE_ID, NAME, NUMBER, ZIPCODE, COUNTRY) VALUES
(19286, 'S', 'Calle de Serrano', 45, 28006, 'Spain'),  -- Madrid address
(19290, 'S', '5th Avenue', 789, 10022, 'USA');  -- New York address


INSERT INTO PHONES (LOCATION_ID, NUMSEQ, EXTERNAL, INTERNAL, DESCRIPTION) VALUES
(7321928491225, 1, '123-456-7890', 'Ext. 101', 'Main Store Phone for Madrid'),
(7321928491225, 2, '123-456-7891', 'Ext. 102', 'Customer Support Phone for Madrid'),
(7321928491229, 1, '555-666-7777', 'Ext. 201', 'Main Store Phone for New York'),
(7321928491229, 2, '555-666-7778', 'Ext. 202', 'Customer Support Phone for New York');


INSERT INTO LOCATION (LOCATION_ID, TYPE_ID, ADDRESS_ID) VALUES
(7321928491225, 'C', 19286),  -- Madrid 
(7321928491229, 'C', 19290);  -- New York 


INSERT INTO STORE (STORE_ID, LOCATION_ID) VALUES
('0001', 7321928491225),  -- Store 1 for Madrid
('0005', 7321928491229);  -- Store 5 for New York


INSERT INTO PAYMENT_METHOD (METHOD_CODE, DESCRIPTION) VALUES
('CC', 'Credit Card'),
('DC', 'Debit Card'),
('PP', 'PayPal'),
('CA', 'Cash'),
('GC', 'Gift Card'),
('BT', 'Bank Transfer');


INSERT INTO SUPPLIER (SUPPLIER_ID, NAME, CONTACT_ID, PAYMENT_TERMS) VALUES
(1001, 'Supplier A', 101, '30 days'),
(1002, 'Supplier B', 102, '45 days'),
(1003, 'Supplier C', 103, '60 days');


INSERT INTO CONTACTS (CONTACT_ID, ADDRESS_ID, PHONENO1, PHONENO2, EMAIL) VALUES
(104, 19286, '111-222-3333', '111-222-4444', 'contact@store1.com'), 
(108, 19290, '555-666-7777', '555-666-8888', 'contact@store5.com');  


INSERT INTO CONTACTS (CONTACT_ID, ADDRESS_ID, PHONENO1, PHONENO2, EMAIL) VALUES
(113, 19286, '123-456-7890', '123-456-7891', 'contact1@supplierA.com'),  
(114, 19287, '234-567-8901', '234-567-8902', 'contact2@supplierB.com'),  
(115, 19288, '345-678-9012', '345-678-9013', 'contact3@supplierC.com');  


INSERT INTO CONTACTS (CONTACT_ID, ADDRESS_ID, PHONENO1, PHONENO2, EMAIL) VALUES
(116, 19286, '321-654-9870', '321-654-9871', 'contact@tommyhilfiger.com'),
(117, 19287, '432-765-8760', '432-765-8761', 'contact@ralphlauren.com'),  
(118, 19288, '543-876-7650', '543-876-7651', 'contact@levis.com'),        
(119, 19289, '654-987-6540', '654-987-6541', 'contact@calvinklein.com'),  
(120, 19290, '765-098-5430', '765-098-5431', 'contact@nike.com');         


INSERT INTO SUPPLIER (SUPPLIER_ID, NAME, CONTACT_ID, PAYMENT_TERMS) VALUES
(1001, 'Supplier A', 113, '30 days'),
(1002, 'Supplier B', 114, '45 days'),
(1003, 'Supplier C', 115, '60 days');


INSERT INTO BRANDS (BRAND_ID, NAME, DESCRIPTION, SUPPLIER_ID) VALUES
(1001, 'Tommy Hilfiger', 'American premium brand, known for its preppy style.', 1001),
(1002, 'Ralph Lauren', 'Iconic American brand, offering luxury clothing and accessories.', 1001),
(1003, 'Levi\'s', 'Global brand known for its denim jeans and apparel.', 1002),
(1004, 'Calvin Klein', 'Luxury fashion house specializing in minimalist designs.', 1002),
(1005, 'Nike', 'Sportswear and athletic footwear company.', 1003);


INSERT INTO SEASON (SEASON_ID, SEASON_NAME, START_DATE, END_DATE) VALUES
('FW23', 'Fall/Winter 2023', '2023-09-01', '2023-12-31'),
('FW24', 'Fall/Winter 2024', '2024-09-01', '2024-12-31');


INSERT INTO FAMILY (FAMILY_ID, FAMILY_NAME, DESCRIPTION, SEGMENT_ID) VALUES
(1001, 'Men\'s Apparel', 'Clothing, shoes, and accessories for men', 70000000),
(1002, 'Women\'s Apparel', 'Clothing, shoes, and accessories for women', 70000000),
(1003, 'Children\'s Apparel', 'Clothing and accessories for children', 70000000),
(1004, 'Footwear', 'Shoes and boots for men, women, and children', 70000000);


INSERT INTO CLASS (CLASS_ID, DESCRIPTION, FAMILY_ID) VALUES
(3001, 'Suits & Jackets', 1001),          
(3002, 'Casual Wear', 1001),             
(3003, 'Activewear', 1001),               
(3004, 'Dresses & Skirts', 1002),        
(3005, 'Tops & Blouses', 1002),           
(3006, 'Jeans & Trousers', 1002),         
(3007, 'Boys Clothing', 1003),            
(3008, 'Girls Clothing', 1003),         
(3009, 'Boots', 1004),                   
(3010, 'Sneakers', 1004);


INSERT INTO CATEGORY (CATEGORY_ID, CATEGORY_NAME, DESCRIPTION, CLASS_ID) VALUES
(4001, 'Coats', 'Outerwear designed for warmth and protection against cold weather', 3001),
(4002, 'Jackets', 'Lightweight outerwear', 3001),
(4003, 'Knitwear', 'Clothing made from knitted fabric', 3002),
(4004, 'T-shirts', 'Casual, short-sleeve shirts', 3002),
(4005, 'Shirts', 'Collared shirts', 3003),
(4006, 'Blouses', 'Lightweight tops', 3003),
(4007, 'Pants', 'Trousers', 3004),
(4008, 'Dresses', 'One-piece clothing items, for both casual and formal occasions', 3004),
(4009, 'Skirts', 'Bottom wear', 3005),
(4010, 'Jeans', 'Denim pants', 3006),
(4011, 'Trousers', 'Formal or semi-formal pants', 3007);


-- PRODUCTS for FW23 Collection
INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_NAME, CLOTHING_ID, BRAND_ID, SUPPLIER_ID, PRICE, SIZE_ID, SEASON_ID, SHORT_DESCRIPTION, CATEGORY_ID) VALUES
(1001, 'Winter Coat', 2001, 1001, 1001, 99.99, 'XS', 'FW23', 'Warm winter coat', 4001),
(1002, 'Winter Coat', 2002, 1001, 1001, 99.99, 'S', 'FW23', 'Warm winter coat', 4001),
(1003, 'Winter Coat', 2003, 1001, 1001, 99.99, 'M', 'FW23', 'Warm winter coat', 4001),
(1004, 'Winter Coat', 2004, 1001, 1001, 99.99, 'L', 'FW23', 'Warm winter coat', 4001),
(1005, 'Winter Coat', 2005, 1001, 1001, 99.99, 'XL', 'FW23', 'Warm winter coat', 4001),


(1011, 'Winter Jacket', 2006, 1001, 1001, 89.99, 'XS', 'FW23', 'Cozy winter jacket', 4002),
(1012, 'Winter Jacket', 2007, 1001, 1001, 89.99, 'S', 'FW23', 'Cozy winter jacket', 4002),
(1013, 'Winter Jacket', 2008, 1001, 1001, 89.99, 'M', 'FW23', 'Cozy winter jacket', 4002),
(1014, 'Winter Jacket', 2009, 1001, 1001, 89.99, 'L', 'FW23', 'Cozy winter jacket', 4002),
(1015, 'Winter Jacket', 2010, 1001, 1001, 89.99, 'XL', 'FW23', 'Cozy winter jacket', 4002),


(1021, 'Knit Sweater', 2011, 1002, 1002, 65.00, 'XS', 'FW23', 'Soft and warm knit sweater', 4003),
(1022, 'Knit Sweater', 2012, 1002, 1002, 65.00, 'S', 'FW23', 'Soft and warm knit sweater', 4003),
(1023, 'Knit Sweater', 2013, 1002, 1002, 65.00, 'M', 'FW23', 'Soft and warm knit sweater', 4003),
(1024, 'Knit Sweater', 2014, 1002, 1002, 65.00, 'L', 'FW23', 'Soft and warm knit sweater', 4003),
(1025, 'Knit Sweater', 2015, 1002, 1002, 65.00, 'XL', 'FW23', 'Soft and warm knit sweater', 4003);


-- PRODUCTS for FW24 Collection: Linked to CLOTHING IDs
INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_NAME, CLOTHING_ID, BRAND_ID, SUPPLIER_ID, PRICE, SIZE_ID, SEASON_ID, SHORT_DESCRIPTION, CATEGORY_ID) VALUES
(1101, 'Winter Jacket', 2101, 1002, 1001, 110.00, 'XS', 'FW24', 'Cozy winter jacket', 4002),
(1102, 'Winter Jacket', 2102, 1002, 1001, 110.00, 'S', 'FW24', 'Cozy winter jacket', 4002),
(1103, 'Winter Jacket', 2103, 1002, 1001, 110.00, 'M', 'FW24', 'Cozy winter jacket', 4002),
(1104, 'Winter Jacket', 2104, 1002, 1001, 110.00, 'L', 'FW24', 'Cozy winter jacket', 4002),
(1105, 'Winter Jacket', 2105, 1002, 1001, 110.00, 'XL', 'FW24', 'Cozy winter jacket', 4002),


(1161, 'Winter Blouse', 2111, 1003, 1003, 65.00, 'XS', 'FW24', 'Long-sleeve blouse for winter', 4006),
(1162, 'Winter Blouse', 2112, 1003, 1003, 65.00, 'S', 'FW24', 'Long-sleeve blouse for winter', 4006),
(1163, 'Winter Blouse', 2113, 1003, 1003, 65.00, 'M', 'FW24', 'Long-sleeve blouse for winter', 4006),
(1164, 'Winter Blouse', 2114, 1003, 1003, 65.00, 'L', 'FW24', 'Long-sleeve blouse for winter', 4006),
(1165, 'Winter Blouse', 2115, 1003, 1003, 65.00, 'XL', 'FW24', 'Long-sleeve blouse for winter', 4006),


(1171, 'Winter Jeans', 2116, 1004, 1002, 85.00, 'XS', 'FW24', 'Denim jeans for winter', 4010),
(1172, 'Winter Jeans', 2117, 1004, 1002, 85.00, 'S', 'FW24', 'Denim jeans for winter', 4010),
(1173, 'Winter Jeans', 2118, 1004, 1002, 85.00, 'M', 'FW24', 'Denim jeans for winter', 4010),
(1174, 'Winter Jeans', 2119, 1004, 1002, 85.00, 'L', 'FW24', 'Denim jeans for winter', 4010),
(1175, 'Winter Jeans', 2120, 1004, 1002, 85.00, 'XL', 'FW24', 'Denim jeans for winter', 4010);


INSERT INTO COLOR (COLOR_ID, RGB_RED, RGB_GREEN, RGB_BLUE, HEX_CODE, COLOR_NAME) VALUES
(1, 255, 0, 0, 'FF0000', 'Red'),
(2, 0, 255, 0, '00FF00', 'Green'),
(3, 0, 0, 255, '0000FF', 'Blue'),
(4, 255, 255, 0, 'FFFF00', 'Yellow'),
(5, 0, 0, 0, '000000', 'Black'),
(6, 255, 255, 255, 'FFFFFF', 'White'),
(7, 128, 128, 128, '808080', 'Gray'),
(8, 255, 165, 0, 'FFA500', 'Orange'),
(9, 255, 192, 203, 'FFC0CB', 'Pink');


-- CLOTHING for FW23 Collection: 
INSERT INTO CLOTHING (CLOTHING_ID, SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2001,'XS', 2, 'FW23-WINTERCOAT-GREEN-XS', 'FW23', 70000000),
(2002,'S', 2, 'FW23-WINTERCOAT-GREEN-S', 'FW23', 70000000),
(2003,'M', 2, 'FW23-WINTERCOAT-GREEN-M', 'FW23', 70000000),
(2004, 'L', 2, 'FW23-WINTERCOAT-GREEN-L', 'FW23', 70000000),
(2005,'XL', 2, 'FW23-WINTERCOAT-GREEN-XL', 'FW23', 70000000);


INSERT INTO CLOTHING (CLOTHING_ID,SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2006,'XS', 8, 'FW23-WINTERJACKET-ORANGE-XS', 'FW23', 70000000),
(2007,'S', 8, 'FW23-WINTERJACKET-ORANGE-S', 'FW23', 70000000),
(2008,'M', 8, 'FW23-WINTERJACKET-ORANGE-M', 'FW23', 70000000),
(2009,'L', 8, 'FW23-WINTERJACKET-ORANGE-L', 'FW23', 70000000),
(2010,'XL', 8, 'FW23-WINTERJACKET-ORANGE-XL', 'FW23', 70000000);


INSERT INTO CLOTHING (CLOTHING_ID, SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2011,'XS', 3, 'FW23-KNITWEAR-BLUE-XS', 'FW23', 70000000),
(2012,'S', 3, 'FW23-KNITWEAR-BLUE-S', 'FW23', 70000000),
(2013, 'M', 3, 'FW23-KNITWEAR-BLUE-M', 'FW23', 70000000),
(2014, 'L', 3, 'FW23-KNITWEAR-BLUE-L', 'FW23', 70000000),
(2015,'XL', 3, 'FW23-KNITWEAR-BLUE-XL', 'FW23', 70000000);


-- CLOTHING for FW24 Collection: 
INSERT INTO CLOTHING (CLOTHING_ID,SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2101,'XS', 5, 'FW24-WINTERJACKET-BLACK-XS', 'FW24', 70000000),
(2102,'S', 5, 'FW24-WINTERJACKET-BLACK-S', 'FW24', 70000000),
(2103,'M', 5, 'FW24-WINTERJACKET-BLACK-M', 'FW24', 70000000),
(2104,'L', 5, 'FW24-WINTERJACKET-BLACK-L', 'FW24', 70000000),
(2105,'XL', 5, 'FW24-WINTERJACKET-BLACK-XL', 'FW24', 70000000);


INSERT INTO CLOTHING (CLOTHING_ID, SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2111,  'XS', 6, 'FW24-WINTERBLOUSE-WHITE-XS', 'FW24', 70000000),
(2112,'S', 6, 'FW24-WINTERBLOUSE-WHITE-S', 'FW24', 70000000),
(2113,'M', 6, 'FW24-WINTERBLOUSE-WHITE-M', 'FW24', 70000000),
(2114,'L', 6, 'FW24-WINTERBLOUSE-WHITE-L', 'FW24', 70000000),
(2115,'XL', 6, 'FW24-WINTERBLOUSE-WHITE-XL', 'FW24', 70000000);


INSERT INTO CLOTHING (CLOTHING_ID, SIZE_ID, COLOR_ID, SKU, SEASON_ID, SEGMENT_ID) VALUES
(2116, 'XS', 7, 'FW24-WINTERJEANS-BLUE-XS', 'FW24', 70000000),
(2117, 'S', 7, 'FW24-WINTERJEANS-BLUE-S', 'FW24', 70000000),
(2118,'M', 7, 'FW24-WINTERJEANS-BLUE-M', 'FW24', 70000000),
(2119,'L', 7, 'FW24-WINTERJEANS-BLUE-L', 'FW24', 70000000),
(2120, 'XL', 7, 'FW24-WINTERJEANS-BLUE-XL', 'FW24', 70000000);


INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRSTNAME, LASTNAME, POSITION, HIREDATE, STORE_ID) VALUES
(1, 'Sara', 'Sanchez', 'Manager', '2023-01-01', '0001'),  -- Employee for Madrid store
(2, 'Jane', 'Smith', 'Cashier', '2023-02-01', '0005');  -- Employee for New York store


INSERT INTO CUSTOMERS (CUSTOMER_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER) VALUES
('CUST001', 'Juan', 'Sanchez', 'juan.sanchez123@gmail.com', '123-456-7890'),
('CUST002', 'Martin', 'Garcia', 'martin.garcia@gmail.com', '987-654-3210'),
('CUST003', 'Michael', 'Johnson', 'michael.johnson@hotmail.com', '555-555-5555'),
('CUST004', 'Emily', 'Davis', 'emily.davis@gmail.com', '666-777-8888'),
('CUST005', 'Sara', 'Gomez', 'sara.gomez@gmail.com', '444-555-6666');


INSERT INTO CUSTOMERS (CUSTOMER_ID) VALUES
('CUST006'),
('CUST007'),
('CUST008'),
('CUST009'),
('CUST010');


INSERT INTO CURRENCY (CURRENCY_ID, CURRENCY_CODE, DESCRIPTION) VALUES
('EUR', 978, 'Euro'),
('USD', 840, 'US Dollar'),
('GBP', 826, 'British Pound'),
('JPY', 392, 'Japanese Yen'),
('AUD', 036, 'Australian Dollar');


INSERT INTO TICKET (TICKET_ID, TIMEPLACED, STORE_ID, CASHIER_ID, TOTAL_NET_PRODUCT, TOTAL_TAX, TOTAL_ORDER, CURRENCY_ID, PAYMENT_ID, METHOD_CODE, CUSTOMER_ID) VALUES
(1001, '2023-12-23 09:15:00', '0001', 1, 200.50, 25.00, 225.50, 'EUR', 'PAY001', 'CC', 'CUST001'),
(1002, '2024-01-03 15:00:00', '0005', 2, 275.00, 30.00, 305.00, 'USD', 'PAY014', 'CC', 'CUST004'),
(1003, '2024-02-07 10:00:00', '0001', 1, 190.75, 20.00, 210.75, 'EUR', 'PAY015', 'CC', 'CUST005'),
(1004, '2024-03-10 17:45:00', '0005', 2, 180.00, 15.00, 195.00, 'USD', 'PAY004', 'CA', 'CUST004'),
(1005, '2024-04-22 10:00:00', '0001', 1, 240.00, 30.00, 270.00, 'EUR', 'PAY005', 'CC', 'CUST005'),
(1006, '2024-05-11 08:30:00', '0005', 2, 120.00, 18.00, 138.00, 'USD', 'PAY006', 'GC', 'CUST006'),
(1007, '2024-06-18 16:00:00', '0001', 1, 220.25, 27.00, 247.25, 'EUR', 'PAY007', 'PP', 'CUST007'),
(1008, '2024-07-25 13:15:00', '0005', 2, 300.00, 35.00, 335.00, 'USD', 'PAY008', 'CC', 'CUST008'),
(1009, '2024-08-14 15:00:00', '0001', 1, 275.00, 30.00, 305.00, 'EUR', 'PAY009', 'CA', 'CUST009'),
(1010, '2024-09-12 13:45:00', '0005', 2, 260.00, 30.00, 290.00, 'USD', 'PAY010', 'GC', 'CUST010'),
(1011, '2024-10-02 10:00:00', '0001', 1, 150.25, 20.00, 170.25, 'EUR', 'PAY011', 'CC', 'CUST001'),
(1012, '2024-11-17 19:30:00', '0005', 2, 215.00, 28.00, 243.00, 'USD', 'PAY012', 'PP', 'CUST002'),
(1013, '2024-12-03 07:30:00', '0001', 1, 195.50, 25.00, 220.50, 'EUR', 'PAY013', 'GC', 'CUST003'),
(1014, '2024-01-15 14:30:00', '0005', 2, 150.00, 20.00, 170.00, 'USD', 'PAY002', 'PP', 'CUST002'),
(1015, '2024-02-20 11:00:00', '0001', 1, 350.75, 45.00, 395.75, 'EUR', 'PAY003', 'GC', 'CUST003'),
(1016, '2024-03-18 13:45:00', '0005', 2, 150.00, 20.00, 170.00, 'USD', 'PAY016', 'GC', 'CUST006'),
(1017, '2024-04-08 14:30:00', '0001', 1, 230.00, 30.00, 260.00, 'EUR', 'PAY017', 'PP', 'CUST007'),
(1018, '2024-05-10 16:30:00', '0005', 2, 250.00, 35.00, 285.00, 'USD', 'PAY018', 'CC', 'CUST008'),
(1019, '2024-06-22 13:15:00', '0001', 1, 180.50, 20.00, 200.50, 'EUR', 'PAY019', 'CA', 'CUST009');


INSERT INTO PAYMENTS (PAYMENT_ID, TICKET_ID, METHOD_CODE, AMOUNT, PAYMENT_DATE) VALUES
('PAY001', 1001, 'CC', 225.50, '2023-12-23 09:15:00'),
('PAY002', 1002, 'CC', 170.00, '2024-01-15 14:30:00'),
('PAY003', 1003, 'GC', 395.75, '2024-02-20 11:00:00'),
('PAY004', 1004, 'CA', 195.00, '2024-03-10 17:45:00'),
('PAY005', 1005, 'CC', 270.00, '2024-04-22 10:00:00'),
('PAY006', 1006, 'GC', 138.00, '2024-05-11 08:30:00'),
('PAY007', 1007, 'CC', 247.25, '2024-06-18 16:00:00'),
('PAY008', 1008, 'CC', 335.00, '2024-07-25 13:15:00'),
('PAY009', 1009, 'CA', 305.00, '2024-08-14 15:00:00'),
('PAY010', 1010, 'GC', 290.00, '2024-09-12 13:45:00'),
('PAY011', 1011, 'CC', 170.25, '2024-10-02 10:00:00'),
('PAY012', 1012, 'CC', 243.00, '2024-11-17 19:30:00'),
('PAY013', 1013, 'GC', 220.50, '2024-12-03 07:30:00'),
('PAY014', 1014, 'CC', 305.00, '2024-01-15 14:30:00'),
('PAY015', 1015, 'CC', 210.75, '2024-02-07 10:00:00'),
('PAY016', 1016, 'GC', 170.00, '2024-03-18 13:45:00'),
('PAY017', 1017, 'CC', 260.00, '2024-04-08 14:30:00'),
('PAY018', 1018, 'CC', 285.00, '2024-05-10 16:30:00'),
('PAY019', 1019, 'CA', 200.50, '2024-06-22 13:15:00');


INSERT INTO TICKET_ITEM (TICKET_ID, NUMSEQ, PRODUCT_ID, DESCRIPTION, QUANTITY, CURRENCY, PRICE, TAX_AMOUNT, PRODUCT_AMOUNT) VALUES
(1001, 1, 1001, 'Winter Coat - Green - XS', 1, 'EUR', 99.99, 5.00, 104.99),
(1001, 2, 1011, 'Winter Jacket - Orange - M', 1, 'EUR', 89.99, 4.50, 94.49),
(1002, 1, 1021, 'Knit Sweater - Blue - XS', 1, 'USD', 65.00, 3.25, 68.25),
(1003, 1, 1003, 'Winter Jacket - Orange - M', 1, 'EUR', 89.99, 4.50, 94.49),
(1004, 1, 1002, 'Winter Coat - Green - S', 1, 'USD', 99.99, 5.00, 104.99),
(1005, 1, 1023, 'Knit Sweater - Blue - L', 1, 'EUR', 65.00, 3.25, 68.25),
(1006, 1, 1012, 'Winter Jacket - Orange - S', 1, 'USD', 89.99, 4.50, 94.49),
(1007, 1, 1005, 'Winter Coat - Green - M', 1, 'EUR', 99.99, 5.00, 104.99),
(1008, 1, 1015, 'Winter Jacket - Orange - XL', 1, 'USD', 89.99, 4.50, 94.49),
(1009, 1, 1006, 'Winter Jacket - Orange - M', 1, 'EUR', 89.99, 4.50, 94.49),
(1010, 1, 1022, 'Knit Sweater - Blue - S', 1, 'USD', 65.00, 3.25, 68.25),
(1011, 1, 1041, 'Winter Blouse - S', 1, 'EUR', 55.00, 2.75, 57.75),
(1012, 1, 1024, 'Knit Sweater - Blue - M', 1, 'USD', 65.00, 3.25, 68.25),
(1013, 1, 1013, 'Winter Jacket - Orange - M', 1, 'EUR', 89.99, 4.50, 94.49),
(1014, 1, 1025, 'Knit Sweater - Blue - L', 1, 'USD', 65.00, 3.25, 68.25),
(1014, 2, 1071, 'Winter Jeans - M', 1, 'USD', 75.00, 3.75, 78.75),
(1015, 1, 1014, 'Winter Jacket - Orange - XL', 1, 'EUR', 89.99, 4.50, 94.49),
(1016, 1, 1025, 'Knit Sweater - Blue - L', 1, 'USD', 65.00, 3.25, 68.25),
(1017, 1, 1008, 'Winter Coat - Green - S', 1, 'EUR', 99.99, 5.00, 104.99),
(1018, 1, 1042, 'Winter Blouse - M', 1, 'USD', 55.00, 2.75, 57.75),
(1019, 1, 1012, 'Winter Jacket - Orange - M', 1, 'EUR', 89.99, 4.50, 94.49);


INSERT INTO CC_PAYMENT (CCPAYMENT_ID, CCPAYTRAN_ID, CURRENCY_ID, EXPECTED_AMOUNT, APPROVING_AMOUNT, APPROVED_AMOUNT, CCPAYMENT_STATE, TIME_CREATED, TIMEUPDATED, TIMEEXPIRED, PAYMENT_ID) VALUES
(4001, 101, 'EUR', 225.50, 220.00, 225.50, '2', '2023-12-23 09:15:00', '2023-12-23 09:20:00', '2023-12-30 00:00:00', 'PAY001'),
(4002, 102, 'USD', 275.00, 270.00, 275.00, '2', '2024-01-03 15:00:00', '2024-01-03 15:10:00', '2024-01-20 00:00:00', 'PAY014'),
(4003, 103, 'EUR', 190.75, 185.00, 190.75, '2', '2024-02-07 10:00:00', '2024-02-07 10:15:00', '2024-02-20 00:00:00', 'PAY015'),
(4004, 104, 'USD', 180.00, 175.00, 180.00, '2', '2024-03-10 17:45:00', '2024-03-10 18:00:00', '2024-03-25 00:00:00', 'PAY004'),
(4005, 105, 'EUR', 240.00, 235.00, 240.00, '2', '2024-04-22 10:00:00', '2024-04-22 10:10:00', '2024-05-05 00:00:00', 'PAY005'),
(4006, 106, 'USD', 120.00, 115.00, 120.00, '2', '2024-05-11 08:30:00', '2024-05-11 08:40:00', '2024-05-25 00:00:00', 'PAY006'),
(4007, 107, 'EUR', 220.25, 215.00, 220.25, '2', '2024-06-18 16:00:00', '2024-06-18 16:10:00', '2024-07-03 00:00:00', 'PAY007'),
(4008, 108, 'USD', 300.00, 295.00, 300.00, '2', '2024-07-25 13:15:00', '2024-07-25 13:30:00', '2024-08-10 00:00:00', 'PAY008'),
(4009, 109, 'EUR', 275.00, 270.00, 275.00, '2', '2024-08-14 15:00:00', '2024-08-14 15:10:00', '2024-08-30 00:00:00', 'PAY009'),
(4010, 110, 'USD', 260.00, 255.00, 260.00, '2', '2024-09-12 13:45:00', '2024-09-12 13:50:00', '2024-09-25 00:00:00', 'PAY010');


INSERT INTO CCPAYMENT_CARD (CCPAYMENT_ID, PAYMENT_TYPE, IS_ENCRYPT, CARD_NUMBER, BANKNAME, CCEXPDATE, CCENTRY_METHOD) VALUES
(5000, 'MC', 'Y', '1234567812345678', 'BBVA', '12/26', '0'),
(5001, 'VS', 'Y', '9876543298765432', 'Santander', '08/25', '1'),
(5002, 'MC', 'Y', '3456789034567890', 'Bankia', '11/27', '0'),
(5003, 'VS', 'Y', '6543218765432109', 'CaixaBank', '02/28', '1'),
(5004, 'AM', 'Y', '5678901256789012', 'Wells Fargo', '03/29', '2'),
(5005, 'DC', 'Y', '1122334411223344', 'Chase', '09/30', '0'),
(5006, 'MC', 'Y', '3344556633445566', 'Citibank', '07/23', '1'),
(5007, 'VS', 'Y', '2233445522334455', 'Bank of America', '10/24', '2'),
(5008, 'AM', 'Y', '4455667744556677', 'HSBC', '06/25', '0'),
(5009, 'DC', 'Y', '6677889966778899', 'American Express', '01/22', '2');


INSERT INTO GIFT_CARDS (GIFT_CARD_ID, BALANCE, EXPIRY_DATE, IS_ACTIVE, PAYMENT_ID) VALUES
(6001, 395.75, '2025-12-31', TRUE, 'PAY003'),
(6002, 138.00, '2025-06-30', TRUE, 'PAY006'),
(6003, 290.00, '2025-12-01', TRUE, 'PAY010'),
(6004, 220.50, '2025-12-03', TRUE, 'PAY013'),
(6005, 170.00, '2025-07-25', TRUE, 'PAY016');


INSERT INTO PRICE (PRODUCT_ID, COST_CURRENCY, COST, PRICE_CURRENCY, PRICE, TAXES) VALUES
(1001, 'EUR', 60.00, 'EUR', 99.99, 5),
(1002, 'USD', 60.00, 'USD', 99.99, 5),
(1003, 'EUR', 60.00, 'EUR', 99.99, 5),
(1004, 'EUR', 60.00, 'EUR', 99.99, 5),
(1005, 'EUR', 60.00, 'EUR', 99.99, 5),
(1011, 'USD', 65.00, 'USD', 89.99, 5),
(1012, 'USD', 65.00, 'USD', 89.99, 5),
(1013, 'USD', 65.00, 'USD', 89.99, 5),
(1014, 'USD', 65.00, 'USD', 89.99, 5),
(1015, 'USD', 65.00, 'USD', 89.99, 5),
(1021, 'USD', 40.00, 'USD', 65.00, 5),
(1022, 'USD', 40.00, 'USD', 65.00, 5),
(1023, 'USD', 40.00, 'USD', 65.00, 5),
(1024, 'USD', 40.00, 'USD', 65.00, 5),
(1025, 'USD', 40.00, 'USD', 65.00, 5),
(1101, 'USD', 75.00, 'USD', 110.00, 5),
(1102, 'USD', 75.00, 'USD', 110.00, 5),
(1103, 'USD', 75.00, 'USD', 110.00, 5),
(1104, 'USD', 75.00, 'USD', 110.00, 5),
(1105, 'USD', 75.00, 'USD', 110.00, 5),
(1161, 'USD', 40.00, 'USD', 65.00, 5),
(1162, 'USD', 40.00, 'USD', 65.00, 5),
(1163, 'USD', 40.00, 'USD', 65.00, 5),
(1164, 'USD', 40.00, 'USD', 65.00, 5),
(1165, 'USD', 40.00, 'USD', 65.00, 5),
(1171, 'USD', 55.00, 'USD', 85.00, 5),
(1172, 'USD', 55.00, 'USD', 85.00, 5),
(1173, 'USD', 55.00, 'USD', 85.00, 5),
(1174, 'USD', 55.00, 'USD', 85.00, 5),
(1175, 'USD', 55.00, 'USD', 85.00, 5);


-- 4. QUESTIONS


-- 1. Which are the top 3 colors sold last season? 
SELECT C.COLOR_NAME, SUM(TI.PRODUCT_AMOUNT) AS TOTAL_SALES
FROM TICKET_ITEM TI
JOIN PRODUCT P ON TI.PRODUCT_ID = P.PRODUCT_ID
JOIN CLOTHING CL ON P.CLOTHING_ID = CL.CLOTHING_ID
JOIN COLOR C ON CL.COLOR_ID = C.COLOR_ID
JOIN SEASON S ON P.SEASON_ID = S.SEASON_ID  -- SEASON linked to PRODUCT, not CLOTHING
WHERE S.SEASON_ID = 'FW23'
GROUP BY C.COLOR_NAME
ORDER BY TOTAL_SALES DESC
LIMIT 3;


-- 2) 2. Show the revenue per type of credit card vs people paying with cash.
SELECT pay.METHOD_CODE AS Payment_Method, SUM(pay.AMOUNT) AS Total_Revenue
FROM PAYMENTS pay
JOIN TICKET t ON pay.TICKET_ID = t.TICKET_ID
WHERE pay.METHOD_CODE IN ('CC', 'CA') 
GROUP BY pay.METHOD_CODE;


-- 3) What is the average amount of profit per type of cloth?
SELECT C.CATEGORY_NAME, AVG(P.PRICE - PR.COST) AS Average_Profit
FROM PRODUCT P
JOIN CATEGORY C ON P.CATEGORY_ID = C.CATEGORY_ID
JOIN PRICE PR ON P.PRODUCT_ID = PR.PRODUCT_ID
GROUP BY C.CATEGORY_NAME;


-- 4) Show a linear graph of revenue per shop for the last 12 months.
SELECT S.STORE_ID, DATE_FORMAT(T.TIMEPLACED, '%Y-%m') AS Month, SUM(P.AMOUNT) AS Revenue
FROM TICKET T
JOIN PAYMENTS P ON T.TICKET_ID = P.TICKET_ID
JOIN STORE S ON T.STORE_ID = S.STORE_ID
WHERE T.TIMEPLACED >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)
GROUP BY S.STORE_ID, Month
ORDER BY Month ASC;


-- 5. What is the most popular brand in the store? 
SELECT B.NAME AS Brand_Name, SUM(TI.PRODUCT_AMOUNT) AS Total_Sales
FROM TICKET_ITEM TI
JOIN PRODUCT P ON TI.PRODUCT_ID = P.PRODUCT_ID
JOIN BRANDS B ON P.BRAND_ID = B.BRAND_ID
GROUP BY B.BRAND_ID
ORDER BY Total_Sales DESC
LIMIT 1;









